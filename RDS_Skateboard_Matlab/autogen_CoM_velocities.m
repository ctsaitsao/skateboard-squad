function [bottomLinkDXCoM,bottomLinkDYCoM,topLinkDXCoM,topLinkDYCoM] = autogen_CoM_velocities(boardDX,boardDY,boardTheta,boardDTheta,boardHeight,bottomLinkRCoM,bottomLinkTheta,bottomLinkDTheta,bottomLinkHeight,topLinkRCoM,topLinkTheta,topLinkDTheta)
%AUTOGEN_COM_VELOCITIES
%    [BOTTOMLINKDXCOM,BOTTOMLINKDYCOM,TOPLINKDXCOM,TOPLINKDYCOM] = AUTOGEN_COM_VELOCITIES(BOARDDX,BOARDDY,BOARDTHETA,BOARDDTHETA,BOARDHEIGHT,BOTTOMLINKRCOM,BOTTOMLINKTHETA,BOTTOMLINKDTHETA,BOTTOMLINKHEIGHT,TOPLINKRCOM,TOPLINKTHETA,TOPLINKDTHETA)

%    This function was generated by the Symbolic Math Toolbox version 8.5.
%    16-May-2020 21:06:26

t2 = cos(boardTheta);
t3 = sin(boardTheta);
t4 = boardTheta+bottomLinkTheta;
t5 = cos(t4);
t6 = sin(t4);
t7 = t4+topLinkTheta;
t12 = (boardHeight.*t2)./2.0;
bottomLinkDXCoM = boardDX-boardDTheta.*(t12+bottomLinkRCoM.*t5)-bottomLinkRCoM.*bottomLinkDTheta.*t5;
if nargout > 1
    t13 = (boardHeight.*t3)./2.0;
    bottomLinkDYCoM = boardDY-boardDTheta.*(t13+bottomLinkRCoM.*t6)-bottomLinkRCoM.*bottomLinkDTheta.*t6;
end
if nargout > 2
    t8 = sin(t7);
    t9 = cos(t7);
    t10 = bottomLinkHeight.*t5;
    t11 = bottomLinkHeight.*t6;
    t14 = t9.*topLinkRCoM;
    topLinkDXCoM = boardDX-bottomLinkDTheta.*(t10+t14)-t14.*topLinkDTheta-boardDTheta.*(t10+t12+t14);
end
if nargout > 3
    t15 = t8.*topLinkRCoM;
    topLinkDYCoM = boardDY-bottomLinkDTheta.*(t11+t15)-t15.*topLinkDTheta-boardDTheta.*(t11+t13+t15);
end
